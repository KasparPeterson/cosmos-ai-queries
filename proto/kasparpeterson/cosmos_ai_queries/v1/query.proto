syntax = "proto3";
package kasparpeterson.cosmos_ai_queries.v1;

option go_package = "github.com/kasparpeterson/cosmos_ai_queries";

import "kasparpeterson/cosmos_ai_queries/v1/types.proto";
import "google/api/annotations.proto";
import "cosmos/query/v1/query.proto";
import "gogoproto/gogo.proto";

// Query defines the module Query service.
service Query {
  // GetGame returns the game at the requested index.
  rpc GetQuery(QueryGetQueryRequest) returns (QueryGetQueryResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get =
        "/kasparpeterson/cosmos_ai_queries/v1/game/{index}";
  }
}

// QueryGetGameRequest is the request type for the Query/GetGame RPC
// method.
message QueryGetQueryRequest {
  // index defines the index of the game to retrieve.
  string index = 1;
}

// QueryGetGameResponse is the response type for the Query/GetGame RPC
// method.
message QueryGetQueryResponse {
  // Game defines the game at the requested index.
  StoredQuery Query = 1;
}